<?xml version="1.0"?>
<launch>
    
    <param name="/use_sim_time" value="true" />
    
    <!-- startup simulated world -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" default="worlds/empty.world"/>
            <arg name="paused" value="false"/>
        </include>
    
    <!-- send robot urdf to param server -->
        <param name="robot_description" command="$(find xacro)/xacro '$(find bh282_hand)/urdf/bh282_hand.xacro'" />
    
    <!-- push robot_description to factory and spawn robot in gazebo -->
        <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model Barret_Hand" respawn="false" output="screen" />
    
    <!-- Load joint_state_controller -->
        <rosparam file="$(find bh282_hand)/cfg/controller/joint_state_controller.yaml" command="load"/>
    <!-- Start joint_state_controller -->
        <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>
    
    <!-- Robot state_publisher subscribes to /joint_states and calculats state of the system 
            as transfer functions between the frames and publishes it as the State of the Robot as TF-->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="10.0" />
        </node>

    <!-- Load the controllers -->
        <rosparam file="$(find bh282_hand)/cfg/controller/bh282_controller.yaml" command="load"/>
     <!-- Spawn the controllers -->    
        <node name="base_to_finger_11_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn base_to_finger_11_joint_controller"
        />
        <node name="finger_11_to_finger_12_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn finger_11_to_finger_12_joint_controller"
        /> 
        <node name="finger_12_to_finger_13_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn finger_12_to_finger_13_joint_controller"
        /> 
        <node name="base_to_finger_21_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn base_to_finger_21_joint_controller"
        />
        <node name="finger_21_to_finger_22_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn finger_21_to_finger_22_joint_controller"
        /> 
        <node name="finger_22_to_finger_23_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn finger_22_to_finger_23_joint_controller"
        /> 
        <node name="finger_31_to_finger_32_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn finger_31_to_finger_32_joint_controller"
        /> 
        <node name="finger_32_to_finger_33_joint_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false"
                    output="screen" ns="/" args="spawn finger_32_to_finger_33_joint_controller"
        />  

</launch>
